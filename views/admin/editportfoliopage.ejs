<%- include('partials/header') %>
    <main class="flex-1 pt-24 md:px-20 px-4">
        <section class="mb-12 text-center">
            <h1 class="text-md md:text-3xl font-extrabold text-gray-900 mb-4">Edit Portfolio Item</h1>
            <p class="text-xs md:text-lg text-blue-700 mb-8">Modify the details of an existing portfolio project.</p>
        </section>

        <section class="bg-white rounded-2xl shadow-xl p-8 mb-16 max-w-3xl mx-auto">
            <h2 class="text-sm font-bold mb-4 text-gray-800">Edit Project Details</h2>
            <form id="editPortfolioForm" class="grid grid-cols-1 md:grid-cols-2 gap-8"
                action="/admin/editportfolio/<%= portfolioItem._id %>" method="POST" enctype="multipart/form-data">

                <div class="flex flex-col">
                    <label for="project-title" class="text-sm text-gray-700 font-semibold mb-2">Project Title</label>
                    <input type="text" id="project-title" name="title"
                        class="border-2 border-gray-300 rounded-lg px-4 py-2 focus:outline-none focus:border-blue-500"
                        placeholder="Project Title" value="<%= portfolioItem.title || '' %>" required />
                </div>

                <div class="flex flex-col">
                    <label for="project-category" class="text-sm text-gray-700 font-semibold mb-2">Category</label>
                    <input type="text" id="project-category" name="category"
                        class="border-2 border-gray-300 rounded-lg px-4 py-2 focus:outline-none focus:border-blue-500"
                        placeholder="e.g. Web, UI/UX" value="<%= (portfolioItem.category || []).join(', ') %>"
                        required />
                </div>
                <div class="flex flex-col">
                    <label for="project-link" class="text-sm text-gray-700 font-semibold mb-2">Link</label>
                    <input type="url" id="projectlink" name="projectlink"
                        class="border-2 border-gray-300 rounded-lg px-4 py-2 focus:outline-none focus:border-blue-500"
                        placeholder="e.g. https://www.google.com" value="<%= portfolioItem.projectlink || '' %>"
                        required />
                </div>

                <div class="flex flex-col md:col-span-2">
                    <label for="project-image" class="text-sm text-gray-700 font-semibold mb-2">Project Image</label>
                    <input type="file" id="project-image" name="image" accept="image/*"
                        class="border-2 border-gray-300 rounded-lg px-4 py-2 focus:outline-none focus:border-blue-500" />

                    <% if (portfolioItem.image) { %>
                        <p class="text-xs text-gray-500 mt-1">
                            Current Image:
                            <a href="/uploads/<%= portfolioItem.image %>" target="_blank"
                                class="text-blue-600 hover:underline">View Current Image</a>
                        </p>
                        <img src="/uploads/<%= portfolioItem.image %>" alt="Current Project Image"
                            class="w-24 h-16 object-cover rounded-md mt-2 shadow-sm" />
                        <% } %>
                </div>

                <div class="flex flex-col md:col-span-2">
                    <label for="project-description" class="text-sm text-gray-700 font-semibold mb-2">Project
                        Description</label>
                    <textarea id="project-description" name="description" rows="4"
                        class="border-2 border-gray-300 rounded-lg px-4 py-2 focus:outline-none focus:border-blue-500 resize-y"
                        placeholder="Project description..." required><%= portfolioItem.description || '' %></textarea>
                </div>

                <div class="flex flex-col md:col-span-2 space-y-4">
                    <button type="submit"
                        class="text-xs md:text-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold py-3 px-8 rounded-lg shadow-lg transition duration-300 w-full">Save
                        Changes</button>
                </div>
            </form>

        </section>
    </main>
    <%- include('partials/footer') %>
        <!-- 
<script>
    document.addEventListener('DOMContentLoaded', () => {
        const editPortfolioForm = document.getElementById('editPortfolioForm');
        const deleteProjectButton = document.getElementById('delete-project-button');

        // Function to show a custom alert modal (reusing logic from previous interactions)
        // You'll need to ensure the customAlertModal HTML and its associated JS functions (showAlert, hideAlert)
        // are included on this page as well, likely in your partials/header or a dedicated JS file.
        function showAlert(message, type = 'info') {
            const customAlertModal = document.getElementById('customAlertModal');
            const customAlertMessage = document.getElementById('customAlertMessage');
            if (!customAlertModal || !customAlertMessage) {
                console.error("Custom alert modal elements not found.");
                alert(message); // Fallback to browser alert
                return;
            }
            customAlertMessage.textContent = message;
            customAlertMessage.classList.remove("text-red-700", "text-green-700", "text-gray-800");
            if (type === "success") {
                customAlertMessage.classList.add("text-green-700");
            } else if (type === "error") {
                customAlertMessage.classList.add("text-red-700");
            } else {
                customAlertMessage.classList.add("text-gray-800");
            }
            customAlertModal.classList.remove('hidden');
        }

        // Event listener for form submission (Save Changes)
        if (editPortfolioForm) {
            editPortfolioForm.addEventListener('submit', async function (e) {
                e.preventDefault();

                const form = e.target;
                const formData = new FormData(form); // Use FormData for file uploads

                // You might need to get the project ID from a hidden input or the URL
                // For example: const projectId = form.elements['projectId'].value;
                const projectId = "<%= portfolioItem._id %>"; // Assuming _id is available from backend

                try {
                    const res = await fetch(`/admin/portfolio/${projectId}`, { // Example endpoint for update
                        method: 'PUT', // Or PATCH
                        body: formData,
                    });

                    const data = await res.json();

                    if (res.ok) {
                        showAlert('Portfolio item updated successfully!', 'success');
                        // Optionally redirect or update UI
                        // window.location.href = '/admin/portfolio'; 
                    } else {
                        showAlert('Error: ' + (data.message || 'Failed to update portfolio item.'), 'error');
                    }
                } catch (err) {
                    console.error('Network error:', err);
                    showAlert('Network error. Please try again later.', 'error');
                }
            });
        }

        // Event listener for Delete Project button
        if (deleteProjectButton) {
            deleteProjectButton.addEventListener('click', async () => {
                // IMPORTANT: Use a custom modal for confirmation instead of browser's confirm()
                const confirmDelete = confirm('Are you sure you want to delete this portfolio item? This action cannot be undone.');
                
                if (confirmDelete) {
                    const projectId = "<%= portfolioItem._id %>"; // Assuming _id is available

                    try {
                        const res = await fetch(`/admin/portfolio/${projectId}`, { // Example endpoint for delete
                            method: 'DELETE',
                        });

                        const data = await res.json();

                        if (res.ok) {
                            showAlert('Portfolio item deleted successfully!', 'success');
                            // Redirect to the portfolio list page after deletion
                            window.location.href = '/admin/portfolio'; 
                        } else {
                            showAlert('Error: ' + (data.message || 'Failed to delete portfolio item.'), 'error');
                        }
                    } catch (err) {
                        console.error('Network error:', err);
                        showAlert('Network error. Please try again later.', 'error');
                    }
                }
            });
        }
    });
</script> -->